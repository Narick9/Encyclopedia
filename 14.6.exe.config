<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <runtime>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="BottleLib" culture="neutral"/>
                <!--<codeBase version="3.0.0.0" href="./BinLibs/BottleLib.dll"/>                                                     -->
                <!--<codeBase version="3.0.0.0" href="file:///D:/dev 10 feb 2020/c#/chapter14/14.6/bin/Debug/BinLibs/BottleLib.dll"/>-->
                <codeBase version="5.0.0.0" href="D:/dev 10 feb 2020/c#/chapter14/14.6/bin/Debug/BinLibs/Bottle.dll"/>
            </dependentAssembly>  <!-- <dependentAssembly> - ведь мы даём инфо о конкретной сборке, верно?                                 -->
        </assemblyBinding>        <!-- <codeBase> - этим элементом мы и задаём версию и путь к файлу. MSDN говорит, что в нём должны быть  -->
    </runtime>                    <!--   два атрибута: version и href (проверив, могу скзать, что всё работает и без указания version)     -->
                                  <!-- version= - этим задаётся версия загружаемой сборки. Если поставить, например, "5.0.0.0", то всё     -->
                                  <!--   опять будет работать                                                                              -->
                                  <!-- href= - собственно, место, откуда должна загружаться сборка (мы должны указать путь с именем).      -->
                                  <!--   Расшифровывается это как Hypertext REFerence. Здесь ты видишь три версии записи пути к одной      -->
                                  <!--   .dll-ке, и все они работают                                                                       -->
                                  <!-- Имей ввиду, что, используя <codeBase>, ты фактически воссоздаёшь системный реестр (а вместе с ним и -->
                                  <!--   возможность получить "ад" DLL). Если путь к сборке перестанет быть действительным, то она не      -->
                                  <!--   сможет быть задействована                                                                         -->
                                  <!-- href=".." - как уже говорилось, подключаться ты можешь и к чему-то за пределами твоего пк. Например -->
                                  <!--   , если ты имеешь доступ к сайту www.MySite.com, то ты можешь записать сюда что-то вроде этого:    -->
                                  <!--       ... href="http://www.MySite.com/Assemblies/BottleLib.dll"                                     -->
                                  <!--   Эта сборка благополучно попадёт в кеш загрузки GAC (если она имеет строе имя)                     -->
                                  <!-- Здесь уже можно поиграться с именем файла сборки. Например, BottleLib.dll легко можно переименовать -->
                                  <!--   в какое-нибудь my.dp. Главное, чтобы в конфигурационном файле целью тоже был my.dp (правда,       -->
                                  <!--   Reference Manager не будет подключать что-то подобное, но над готовым приложением мы можем        -->
                                  <!--   попробовать колдовать****имеется ввиду, что RM не будет подключать my.dp из-за расишрения?)       -->


<!--/////////after readgin///////////////////////////////////////////////////////////////////////-->
    <appSettings>                                <!-- <appSettings> - этод элемент создан -->
        <add key="TextColor" value="Green"/>     <!--   для хранения в себе каких-то      -->
        <add key="Musician" value="Tom Petty"/>  <!--   настроек или просто данных, что   -->
        <add key="YearOfBirth" value="1950"/>    <!--   можно извлечить программно        -->
    </appSettings>                               <!-- <add> - сами данные задаются в этом -->
                                                 <!--   элементе атрибутами key и value.  -->
                                                 <!--   Да, здесь работает схема словаря  -->
<!--/////////////////////////////////////////////////////////////////////////////////////////////-->
</configuration>